import vk_api
import time
import platform
import psutil
import json
from vk_api.longpoll import VkLongPoll, VkEventType
from config import TOKEN, link_commands, ADMINS  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º TOKEN, link_commands –∏ —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤ ADMINS

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Å—Å–∏–∏
vk_session = vk_api.VkApi(token=TOKEN)
longpoll = VkLongPoll(vk_session)
vk = vk_session.get_api()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
def send_message(user_id, message):
    vk.messages.send(user_id=user_id, message=message, random_id=0)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —á—Ç–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –±–µ—Å–µ–¥ –∏–∑ JSON
def load_chats():
    try:
        with open('chats.json', 'r', encoding='utf-8') as f:
            return json.load(f)
    except (FileNotFoundError, json.JSONDecodeError):
        return []

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ —Å–ø–∏—Å–∫–∞ –±–µ—Å–µ–¥ –≤ JSON
def save_chats(chats):
    with open('chats.json', 'w', encoding='utf-8') as f:
        json.dump(chats, f, ensure_ascii=False, indent=4)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –±–µ—Å–µ–¥ –±–µ–∑ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
def update_chats_list():
    chats = load_chats()
    chat_ids = {chat['chat_id'] for chat in chats}  # –ò—Å–ø–æ–ª—å–∑—É–µ–º set –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ chat_id

    conversations = vk.messages.getConversations(count=50)['items']
    for conversation in conversations:
        chat_settings = conversation['conversation']['chat_settings']
        chat_id = conversation['conversation']['peer']['local_id']
        
        if chat_id not in chat_ids:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —ç—Ç–∞ –±–µ—Å–µ–¥–∞ –≤ JSON
            creator_id = chat_settings['owner_id']
            title = chat_settings['title']
            avatar_url = chat_settings.get('photo', {}).get('photo_200', '–ù–µ—Ç –∞–≤–∞—Ç–∞—Ä–∫–∏')
            
            creator_info = vk.users.get(user_ids=creator_id)[0]
            creator_name = f"{creator_info['first_name']} {creator_info['last_name']}"

            chat_info = {
                "chat_id": chat_id,
                "title": title,
                "creator": creator_name,
                "creator_id": creator_id,
                "link": f"vk.com/chat{chat_id}",
                "avatar_url": avatar_url
            }
            chats.append(chat_info)  # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –±–µ—Å–µ–¥—É –≤ —Å–ø–∏—Å–æ–∫
            chat_ids.add(chat_id)

    save_chats(chats)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –±–µ—Å–µ–¥

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–ø–∏—Å–∫–∞ –±–µ—Å–µ–¥
def get_chats_list():
    chats = load_chats()
    if not chats:
        return "–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–µ—Å–µ–¥–∞—Ö."
    
    chats_info = "–°–ø–∏—Å–æ–∫ –±–µ—Å–µ–¥, –≥–¥–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –±–æ—Ç:\n"
    for index, chat in enumerate(chats, start=1):
        chat_info = (f"{index}. –ù–∞–∑–≤–∞–Ω–∏–µ –±–µ—Å–µ–¥—ã: {chat['title']}\n"
                     f"ID –±–µ—Å–µ–¥—ã: {chat['chat_id']}\n"
                     f"–°–æ–∑–¥–∞—Ç–µ–ª—å: {chat['creator']}\n"
                     f"–°—Å—ã–ª–∫–∞ –Ω–∞ –±–µ—Å–µ–¥—É: {chat['link']}\n"
                     f"–ê–≤–∞—Ç–∞—Ä–∫–∞ –±–µ—Å–µ–¥—ã: {chat['avatar_url']}\n")
        chats_info += chat_info + "\n"
    return chats_info

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ—Ä–≤–µ—Ä–µ
def get_server_info():
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        system_info = platform.system()
        python_version = platform.python_version()
        cpu_percent = psutil.cpu_percent(interval=1)
        cpu_cores = psutil.cpu_count()
        memory = psutil.virtual_memory()
        memory_used = memory.used / (1024 ** 3)  # –í –≥–∏–≥–∞–±–∞–π—Ç–∞—Ö
        memory_total = memory.total / (1024 ** 3)  # –í –≥–∏–≥–∞–±–∞–π—Ç–∞—Ö
        disk = psutil.disk_usage('/')
        disk_used = disk.used / (1024 ** 3)  # –í –≥–∏–≥–∞–±–∞–π—Ç–∞—Ö
        disk_total = disk.total / (1024 ** 3)  # –í –≥–∏–≥–∞–±–∞–π—Ç–∞—Ö

        server_info = (
            f"üöÄ–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µüöÄ\n"
            f"üñ• –°–∏—Å—Ç–µ–º–∞: {system_info}\n"
            f"üêç –í–µ—Ä—Å–∏—è –ø–∏—Ç–æ–Ω–∞: {python_version}\n"
            f"üìà –ù–∞–≥—Ä—É–∑–∫–∞ –¶–ü: {cpu_percent}%\n"
            f"üìà –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —è–¥–µ—Ä: {cpu_cores}\n"
            f"üíæ –ó–∞–Ω—è—Ç–æ—Å—Ç—å –û–ó–£: {memory_used:.2f}GB –∏–∑ {memory_total:.2f}GB\n"
            f"üìó –ó–∞–≥—Ä—É–∑–∫–∞ –û–ó–£: {memory.percent}%\n"
            f"üíΩ –î–∏—Å–∫: {disk_used:.2f}GB –∏–∑ {disk_total:.2f}GB\n"
            f"üìÄ –î–∏—Å–∫ –∑–∞–≥—Ä—É–∂–µ–Ω –Ω–∞: {disk.percent}%"
        )
        return server_info
    except Exception as e:
        return f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–µ—Ä–µ: {str(e)}"

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –±–æ—Ç–∞
for event in longpoll.listen():
    if event.type == VkEventType.MESSAGE_NEW and event.to_me:
        message_text = event.text.lower()
        user_id = event.user_id

        if message_text == "–ø–∏–Ω–≥":
            start_time = time.time()
            response_time = time.time() - start_time
            send_message(user_id, f"–ü–û–ù–ì –ë–õ\n–í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: {response_time:.2f} —Å–µ–∫.")
        elif message_text == "—Ö–æ—Å—Ç":
            server_info = get_server_info()
            send_message(user_id, server_info)
        elif message_text == "–∫–æ–º–∞–Ω–¥—ã":
            send_message(user_id, f"–í–æ—Ç –º–æ–∏ –∫–æ–º–∞–Ω–¥—ã: {link_commands}")
        elif message_text == "—á–∞—Ç":
            chat_info = get_chat_info(event.peer_id - 2000000000)
            send_message(user_id, chat_info)
        elif message_text == "–ª—é–¥–∏":
            chat_members = get_chat_members(event.peer_id - 2000000000)
            send_message(user_id, chat_members)
        elif message_text == "—á–∞—Ç—ã":
            if user_id in ADMINS:
                update_chats_list()  # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –±–µ—Å–µ–¥ –ø–µ—Ä–µ–¥ –≤—ã–≤–æ–¥–æ–º
                chats_list = get_chats_list()
                send_message(user_id, chats_list)
            else:
                send_message(user_id, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        else:
            send_message(user_id, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞")
